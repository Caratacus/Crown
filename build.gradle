description = "Crown2"

configurations {
    compile.exclude group: "ch.qos.logback"
    compile.exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    compile.exclude group: "org.springframework.boot", module: "spring-boot-starter-tomcat"
    compile.exclude group: "org.apache.tomcat", module: "tomcat-jdbc"
    compile.exclude group: "com.zaxxer", module: "HikariCP-java7"
}

buildscript {
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/plugins-release" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

group = "org.crown"
version = "2.0"

apply plugin: "java-library"
apply plugin: "org.springframework.boot"
apply plugin: 'jacoco'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    //options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

repositories {
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    jcenter()
}

dependencies {
    implementation "org.springframework:spring-context-support:5.3.18"
    implementation "org.springframework.boot:spring-boot-starter:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-aop:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-undertow:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-log4j2:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-websocket:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-validation:${springBootVersion}"
    implementation "com.baomidou:mybatis-plus-boot-starter:${mybatisPlusVersion}"
    implementation "com.baomidou:dynamic-datasource-spring-boot-starter:2.5.6"
    implementation "org.apache.shiro:shiro-spring:${shiroVersion}"
    implementation "org.apache.shiro:shiro-ehcache:${shiroVersion}"
    implementation "io.springfox:springfox-swagger-ui:2.7.0"
    implementation("io.springfox:springfox-swagger2:${swaggerVersion}") {
        exclude group: "io.swagger", module: "swagger-annotations"
        exclude group: "io.swagger", module: "swagger-models"
    }
    implementation "io.swagger:swagger-annotations:1.5.23"
    implementation "io.swagger:swagger-models:1.5.23"
    implementation "mysql:mysql-connector-java:8.0.17"
    implementation "com.github.pagehelper:pagehelper:5.1.10"
    implementation "p6spy:p6spy:3.8.5"
    implementation "com.lmax:disruptor:3.4.2"
    implementation "org.apache.commons:commons-lang3:3.9"
    implementation "commons-io:commons-io:2.5"
    implementation "commons-fileupload:commons-fileupload:1.4"
    implementation "com.github.theborakompanioni:thymeleaf-extras-shiro:2.0.0"
    implementation "org.quartz-scheduler:quartz:2.3.1"
    implementation "com.alibaba:fastjson:1.2.60"
    //解析客户端操作系统、浏览器等
    implementation "eu.bitwalker:UserAgentUtils:1.21"
    implementation "org.apache.velocity:velocity:1.7"
    implementation "com.github.oshi:oshi-core:4.0.0"
    implementation "net.java.dev.jna:jna:5.4.0"
    implementation "net.java.dev.jna:jna-platform:5.4.0"
    implementation "org.jsoup:jsoup:1.12.1"
    implementation "org.apache.poi:poi-ooxml:4.1.0"
    implementation "org.modelmapper:modelmapper:2.3.5"
    implementation "com.squareup.okhttp3:okhttp:3.12.4"
    implementation "com.squareup.okhttp3:logging-interceptor:3.12.4"
    implementation "com.sun.mail:javax.mail:1.6.2"
    implementation "cn.hutool:hutool-extra:4.6.4"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"
    annotationProcessor 'org.apache.logging.log4j:log4j-core:2.11.2'
    compileOnly "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    testCompile "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}

tasks.matching { it instanceof Test }.all {
    testLogging.events = ["failed", "passed", "skipped"]
}

bootJar {
    baseName = "crown2"
    version = ""
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
        html.destination = new File("${buildDir}/jacocoHtml")
    }
    afterEvaluate {
        classDirectories.setFrom(
                files(classDirectories.files.collect {
                    fileTree(dir: it, exclude: [
                            '**/common/cons/Regex.class'
                    ])
                })
        )
    }
}

check.dependsOn jacocoTestReport
